name: Unified Conversion Workflow

on:
  push:
    paths:
      - 'schema/**/*.yaml'

jobs:
  convert:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Ensure Python scripts and output folders match!
        include:
          - type: "JSON"
            script: "yaml_to_json.py"
            folder: "json"
          - type: "Handlebars"
            script: "yaml_to_obsidian_handlebars.py"
            folder: "obsidian_handlebars"
          - type: "Templates"
            script: "yaml_to_obsidian_templates.py"
            folder: "obsidian_templates"
          - type: "SQL"
            script: "yaml_to_sql.py"
            folder: "sql"
          - type: "Dart"
            script: "yaml_to_dart.py"
            folder: "dart"
          - type: "TypeScript"
            script: "yaml_to_typescript.py"
            folder: "typescript"
          - type: "CSharpUnity"
            script: "yaml_to_csharp_unity.py"
            folder: "csharp_unity"
          - type: "CSharpUnityJsonProperties"
            script: "yaml_to_csharp_unity_json_properties.py"
            folder: "csharp_unity_json_properties"
          - type: "DjangoModels"
            script: "yaml_to_django_models.py"
            folder: "django_models"
          - type: "DjangoNinjaSchemas"
            script: "yaml_to_django_ninja_schemas.py"
            folder: "django_ninja_schemas"
            
    permissions:
      contents: write  

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run: pip install pyyaml
      - run: python ./scripts/${{ matrix.script }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.type }}-files
          path: languages/${{ matrix.folder }}/*

  commit:
    needs: convert
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Move files to correct directory
        run: |
          # Create target directories if they don't exist
          mkdir -p languages/json
          mkdir -p languages/obsidian_handlebars
          mkdir -p languages/obsidian_templates
          mkdir -p languages/sql
          mkdir -p languages/dart
          mkdir -p languages/typescript
          mkdir -p languages/csharp_unity
          mkdir -p languages/csharp_unity_json_properties
          mkdir -p languages/django_models
          mkdir -p languages/django_ninja_schemas
          
          # Move files, handle potential errors if source doesn't exist
          mv JSON-files/* languages/json/ || echo "No JSON files found"
          mv Handlebars-files/* languages/obsidian_handlebars/ || echo "No Handlebars files found"
          mv Templates-files/* languages/obsidian_templates/ || echo "No Templates files found"
          mv SQL-files/* languages/sql/ || echo "No SQL files found"
          mv Dart-files/* languages/dart/ || echo "No Dart files found"
          mv TypeScript-files/* languages/typescript/ || echo "No TypeScript files found"
          mv CSharpUnity-files/* languages/csharp_unity/ || echo "No CSharpUnity files found"
          mv CSharpUnityJsonProperties-files/* languages/csharp_unity_json_properties/ || echo "No CSharpUnityJsonProperties files found"
          mv DjangoModels-files/* languages/django_models/ || echo "No DjangoModels files found"
          mv DjangoNinjaSchemas-files/* languages/django_ninja_schemas/ || echo "No DjangoNinjaSchemas files found"
          
          # Clean up artifact folders
          rm -r *-files # Removes all directories ending in -files

      - name: Configure git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Add and Commit Changes
        run: |
          git add languages/*
          git commit -m "Auto-update files from YAML languages"
          git push
